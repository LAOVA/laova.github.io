import{_ as a,o as e,c as i,Q as n}from"./chunks/framework.867ce416.js";const x=JSON.parse('{"title":"Nginx","description":"","frontmatter":{},"headers":[],"relativePath":"markdowns/3、后端笔记/3）Nginx的基本使用.md","filePath":"markdowns/3、后端笔记/3）Nginx的基本使用.md"}'),t={name:"markdowns/3、后端笔记/3）Nginx的基本使用.md"},r=n('<h1 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;Nginx&quot;">​</a></h1><h2 id="nginx-简介" tabindex="-1">Nginx 简介 <a class="header-anchor" href="#nginx-简介" aria-label="Permalink to &quot;Nginx 简介&quot;">​</a></h2><h3 id="诞生背景" tabindex="-1">诞生背景 <a class="header-anchor" href="#诞生背景" aria-label="Permalink to &quot;诞生背景&quot;">​</a></h3><p>解决 C10K 问题： 10000 concurrent connection，同时处理 10000 个并发连接。即服务器同时支持成千上万并发客户端的问题。</p><h3 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h3><ul><li>反向代理</li><li>负载均衡</li><li>epoll - IO 多路复用</li><li>高并发，最大 50000 个连接</li><li>高性能、低内存消耗</li><li>热部署</li><li>.....</li></ul><h2 id="服务启停" tabindex="-1">服务启停 <a class="header-anchor" href="#服务启停" aria-label="Permalink to &quot;服务启停&quot;">​</a></h2><h3 id="查看进程" tabindex="-1">查看进程 <a class="header-anchor" href="#查看进程" aria-label="Permalink to &quot;查看进程&quot;">​</a></h3><blockquote><p><code>ps -ef|grep nginx</code></p><p>查看 Nginx 进程</p><ol><li><strong>master</strong>：主进程，负责读取和验证配置文件以及管理 worker 进程，只有一个。</li><li><strong>worker</strong>：工作进程，负责处理实际的请求，可以有多个。</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151723613.png" alt="image-20230718223243786"></p><h3 id="控制-nginx" tabindex="-1">控制 Nginx <a class="header-anchor" href="#控制-nginx" aria-label="Permalink to &quot;控制 Nginx&quot;">​</a></h3><blockquote><p><code>nginx -S **</code></p><ol><li><strong>quit</strong>：停止</li><li><strong>stop</strong>：立即（强制）停止</li><li><strong>reload</strong>：重载配置文件</li><li><strong>reopen</strong>：重新打开日志文件</li></ol></blockquote><h3 id="静态站点" tabindex="-1">静态站点 <a class="header-anchor" href="#静态站点" aria-label="Permalink to &quot;静态站点&quot;">​</a></h3><blockquote><p><code>nginx -V</code></p><p>查看版本及文件信息</p><p><code>nginx -t</code></p><p>查看 conf 配置文件位置</p></blockquote><p><strong>如查看结果：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724166.png" alt="image-20230718231049612"></p><p><strong>使用 vscode 打开</strong>：</p><p><code>code /opt/ homebrew/etc/nginx/nginx.conf</code></p><h4 id="反向代理-proxy-pass-负载均衡-upstream" tabindex="-1">反向代理（proxy_pass) / 负载均衡（upstream） <a class="header-anchor" href="#反向代理-proxy-pass-负载均衡-upstream" aria-label="Permalink to &quot;反向代理（proxy_pass) / 负载均衡（upstream）&quot;">​</a></h4><blockquote><p>通过配置 location 来对请求地址进行反向代理，通过配置 upstream 中的 server 服务器以及 weight 权重来实现负载均衡。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724141.png" alt="image-20230718235705619"></p><br><h1 id="本地简易部署" tabindex="-1">本地简易部署 <a class="header-anchor" href="#本地简易部署" aria-label="Permalink to &quot;本地简易部署&quot;">​</a></h1><h2 id="nginx-目录结构" tabindex="-1">Nginx 目录结构 <a class="header-anchor" href="#nginx-目录结构" aria-label="Permalink to &quot;Nginx 目录结构&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724783.png" alt="image-20230519164342458"></p><br><h2 id="导入打包文件-dist" tabindex="-1">导入打包文件（dist) <a class="header-anchor" href="#导入打包文件-dist" aria-label="Permalink to &quot;导入打包文件（dist)&quot;">​</a></h2><h3 id="在-html-目录下添加项目文件夹" tabindex="-1">在 /html 目录下添加项目文件夹 <a class="header-anchor" href="#在-html-目录下添加项目文件夹" aria-label="Permalink to &quot;在 /html 目录下添加项目文件夹&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724213.png" alt="image-20230519164604379"></p><h3 id="在项目文件夹中添加-dist-打包文件夹里的全部文件" tabindex="-1">在项目文件夹中添加 dist 打包文件夹里的全部文件 <a class="header-anchor" href="#在项目文件夹中添加-dist-打包文件夹里的全部文件" aria-label="Permalink to &quot;在项目文件夹中添加 dist 打包文件夹里的全部文件&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724896.png" alt="image-20230519164718638"></p><br><h2 id="修改配置文件" tabindex="-1">修改配置文件 <a class="header-anchor" href="#修改配置文件" aria-label="Permalink to &quot;修改配置文件&quot;">​</a></h2><h3 id="打开-conf-文件夹中的-nginx-conf-文件" tabindex="-1">打开 /conf 文件夹中的 nginx.conf 文件 <a class="header-anchor" href="#打开-conf-文件夹中的-nginx-conf-文件" aria-label="Permalink to &quot;打开 /conf 文件夹中的 nginx.conf 文件&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724476.png" alt="image-20230519164837500"></p><h3 id="添加项目部署配置" tabindex="-1">添加项目部署配置 <a class="header-anchor" href="#添加项目部署配置" aria-label="Permalink to &quot;添加项目部署配置&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724880.png" alt="image-20230915172324686"></p><br><h2 id="启动-nginx" tabindex="-1">启动 Nginx <a class="header-anchor" href="#启动-nginx" aria-label="Permalink to &quot;启动 Nginx&quot;">​</a></h2><h3 id="双击打开-nginx-exe" tabindex="-1">双击打开 nginx.exe <a class="header-anchor" href="#双击打开-nginx-exe" aria-label="Permalink to &quot;双击打开 nginx.exe&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724698.png" alt="image-20230519165753752"></p><h3 id="重新载入-nginx-检查服务是否开启成功" tabindex="-1">重新载入 nginx，检查服务是否开启成功 <a class="header-anchor" href="#重新载入-nginx-检查服务是否开启成功" aria-label="Permalink to &quot;重新载入 nginx，检查服务是否开启成功&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202309151724242.png" alt="image-20230519175307974"></p>',43),o=[r];function l(s,h,g,d,c,p){return e(),i("div",null,o)}const u=a(t,[["render",l]]);export{x as __pageData,u as default};
