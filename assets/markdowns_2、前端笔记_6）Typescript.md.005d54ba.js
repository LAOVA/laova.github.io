import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.867ce416.js";const g=JSON.parse('{"title":"Typescript","description":"","frontmatter":{},"headers":[],"relativePath":"markdowns/2、前端笔记/6）Typescript.md","filePath":"markdowns/2、前端笔记/6）Typescript.md"}'),p={name:"markdowns/2、前端笔记/6）Typescript.md"},o=l(`<h1 id="typescript" tabindex="-1">Typescript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;Typescript&quot;">​</a></h1><h2 id="ts-简介" tabindex="-1">TS 简介 <a class="header-anchor" href="#ts-简介" aria-label="Permalink to &quot;TS 简介&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851086.png" alt="image-20230417165812678"></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851228.png" alt="image-20230417165828762"></p><br><br><h2 id="ts-开发环境搭建" tabindex="-1">TS 开发环境搭建 <a class="header-anchor" href="#ts-开发环境搭建" aria-label="Permalink to &quot;TS 开发环境搭建&quot;">​</a></h2><h3 id="如何在控制台直接运行-ts-并可查看打印等输出内容" tabindex="-1"><strong>如何在控制台直接运行 ts，并可查看打印等输出内容</strong> <a class="header-anchor" href="#如何在控制台直接运行-ts-并可查看打印等输出内容" aria-label="Permalink to &quot;**如何在控制台直接运行 ts，并可查看打印等输出内容**&quot;">​</a></h3><p><strong>1、在 vscode 中安装插件 Code Runner</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851824.png" alt="img"></p><p><strong>2、安装 ts 包</strong></p><div class="language-cobol vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cobol</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#DBD7CAEE;">npm  i typescript ts-node @types</span><span style="color:#CB7676;">/</span><span style="color:#DBD7CAEE;">node@</span><span style="color:#CB7676;">*</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;">g</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393A34;">npm  i typescript ts-node @types</span><span style="color:#AB5959;">/</span><span style="color:#393A34;">node@</span><span style="color:#AB5959;">*</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;">g</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851714.png" alt="img"></p><p><strong>3、点击文件右上角的运行按钮即可</strong></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851398.png" alt="img"></p><br><h3 id="自动编译" tabindex="-1">自动编译 <a class="header-anchor" href="#自动编译" aria-label="Permalink to &quot;自动编译&quot;">​</a></h3><p>设置 VSCode 自动编译，省去敲命令编译文件，由工具自动完成，提高效率。</p><p>运行 <code>tsc --init</code>，创建 <code>tsconfig.json</code> 文件； 修改 <code>tsconfig.json</code> 文件，设置编译后的 js 文件夹。快速查找 <code>outDir</code>，输出路径修改为：<code>&quot;outDir&quot;: &quot;./js/&quot;</code>；</p><p>设置 vscode 监视任务，之后修改项目中的 ts 代码时，会自动生成对应 js； （或运行 <code>tsc -w </code>命令监听）</p><br><br><h2 id="ts-基本数据类型" tabindex="-1">TS 基本数据类型 <a class="header-anchor" href="#ts-基本数据类型" aria-label="Permalink to &quot;TS 基本数据类型&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851667.png" alt="image-20230417171630827"></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851505.png" alt="image-20230417171905158"></p><br><br><h2 id="ts-编译选项" tabindex="-1">TS 编译选项 <a class="header-anchor" href="#ts-编译选项" aria-label="Permalink to &quot;TS 编译选项&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851978.png" alt="image-20230417172125187"></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151851981.png" alt="image-20230417172852105"></p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852757.png" alt="image-20230417173005996" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852014.png" alt="image-20230417173340097" style="zoom:67%;"><br><br><h2 id="面向对象" tabindex="-1">面向对象 <a class="header-anchor" href="#面向对象" aria-label="Permalink to &quot;面向对象&quot;">​</a></h2><h3 id="类-class" tabindex="-1">类（class） <a class="header-anchor" href="#类-class" aria-label="Permalink to &quot;类（class）&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852094.png" alt="image-20230418100419520"></p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852313.png" alt="image-20230418101345704" style="zoom:67%;"><h4 id="构造函数和-this" tabindex="-1">构造函数和 this <a class="header-anchor" href="#构造函数和-this" aria-label="Permalink to &quot;构造函数和 this&quot;">​</a></h4><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852069.png" alt="image-20230418103258732" style="zoom:67%;"><h4 id="继承" tabindex="-1">继承 <a class="header-anchor" href="#继承" aria-label="Permalink to &quot;继承&quot;">​</a></h4><blockquote><p>class Dog extends Animal 此时，Animal 被称为父类，Dog 被称为子类； 使用继承后，子类将会拥有父类所有的方法和属性通过==继承==可以将多个类中共有的代码写在一个父类中，这 2 样只需要写一次即可让所有的子类都同时拥有父类中的属性和方法如果希望在子类中添加一些父类中没有的属性或方法直接加就行； 如果在子类中添加了和父类相同的方法，则子类方法会覆盖掉父类的方法，这种子类覆盖掉父类方法的形式，我们称为方法==重写==；</p><p><strong>super 关键字</strong>：在类的方法中 super 就表示当前类的父</p><p>如果子类中写了构造函数，在子类构造函数中必须对父类的构造函数进行调用（super(...))</p><p><strong>抽象类</strong>：以 abstract 开头的类是抽象类。</p><p>抽象类和其他类区别不大，只是不能用来创建对象，抽象类就是专门用来被继承的类；</p><p>抽象类中可以添加抽象方法。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">abstract</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Animal</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">name</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">age</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#BD976A;">name</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">age</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">name</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">age</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">age</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">say</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">谁在叫</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//定义一个抽象方法</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//抽象方法使用abstract开头，没有方法体</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//抽象方法只能定义在抽象类中，子类必须对抽象方法进行重写</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">abstract</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">test</span><span style="color:#666666;">():</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">void</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Dog</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">extends</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Animal</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">age</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">;</span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;">	</span><span style="color:#4C9A91;">2</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#BD976A;">name</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">age</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">super</span><span style="color:#666666;">(</span><span style="color:#BD976A;">name</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">age</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 调用父类构造函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">age</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">age</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">run</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">\${</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">name</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">在跑</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">say</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">super</span><span style="color:#666666;">.</span><span style="color:#80A665;">say</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">汪汪汪</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">test</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Cat</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">extends</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Animal</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">say</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">喵喵喵</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">test</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">dog</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Dog</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">Fido</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dog</span><span style="color:#666666;">.</span><span style="color:#BD976A;">name</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">dog</span><span style="color:#666666;">.</span><span style="color:#BD976A;">age</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">dog</span><span style="color:#666666;">.</span><span style="color:#80A665;">say</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">dog</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">dog</span><span style="color:#666666;">.</span><span style="color:#80A665;">test</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">cat</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Cat</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">mm</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cat</span><span style="color:#666666;">.</span><span style="color:#BD976A;">name</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">cat</span><span style="color:#666666;">.</span><span style="color:#BD976A;">age</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">cat</span><span style="color:#666666;">.</span><span style="color:#80A665;">say</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">cat</span><span style="color:#666666;">.</span><span style="color:#80A665;">test</span><span style="color:#666666;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">})()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">abstract</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Animal</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">name</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">age</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#B07D48;">name</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">age</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">name</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">name</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">age</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">age</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">say</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">谁在叫</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//定义一个抽象方法</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//抽象方法使用abstract开头，没有方法体</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//抽象方法只能定义在抽象类中，子类必须对抽象方法进行重写</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">abstract</span><span style="color:#393A34;"> </span><span style="color:#59873A;">test</span><span style="color:#999999;">():</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">void</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Dog</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">extends</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Animal</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">age</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">;</span><span style="color:#2F798A;">1</span><span style="color:#393A34;">	</span><span style="color:#2F798A;">2</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#B07D48;">name</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">age</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">super</span><span style="color:#999999;">(</span><span style="color:#B07D48;">name</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">age</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 调用父类构造函数</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">age</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">age</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">run</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">\${</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B56959;">name</span><span style="color:#999999;">}</span><span style="color:#B56959;">在跑</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">say</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">super</span><span style="color:#999999;">.</span><span style="color:#59873A;">say</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">汪汪汪</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">test</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Cat</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">extends</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Animal</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">say</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">喵喵喵</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">test</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">test</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">dog</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Dog</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Fido</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dog</span><span style="color:#999999;">.</span><span style="color:#B07D48;">name</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">dog</span><span style="color:#999999;">.</span><span style="color:#B07D48;">age</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">dog</span><span style="color:#999999;">.</span><span style="color:#59873A;">say</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">dog</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">dog</span><span style="color:#999999;">.</span><span style="color:#59873A;">test</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">cat</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Cat</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">mm</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cat</span><span style="color:#999999;">.</span><span style="color:#B07D48;">name</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">cat</span><span style="color:#999999;">.</span><span style="color:#B07D48;">age</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">cat</span><span style="color:#999999;">.</span><span style="color:#59873A;">say</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">cat</span><span style="color:#999999;">.</span><span style="color:#59873A;">test</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">})()</span></span></code></pre></div><br><h3 id="接口" tabindex="-1">接口 <a class="header-anchor" href="#接口" aria-label="Permalink to &quot;接口&quot;">​</a></h3><blockquote><p>**抽象类：**强调的是把共同(共有、相同)的属性方法， 抽象出来，统一写在一个地方（他们的实现代码是一样的），方便维护（面向对象的继承特性）。</p><p><strong>接口：</strong> 抽象的是行为 - 同一种行为的不同实现方式。当多个对象都拥有相同的行为，但是行为的具体实现方式不一样的时候可以用接口抽象（面向对象中的多态特性）。</p><p>接口也相当于==语法规范==，在使用 ts 编写的时候，需要注重的就是数据类型以及语法规范，恰好这里提供了一个接口，在进行传值的时候，传值的类型以及字段必须符合我们预期的类型规范才可以。</p><p>接口用来定义一个类结构，用来定义一个类中应该包含哪些属性和方法,同时接口也可以当成类型声明去使用</p><p>接口可以在定义类的时候去限制类的结构，接口中的所有的属性都不能有实际的值。接口，只定义对象的结构，而不考虑实际值。在接口中所有的方法都是抽象方法，没有返回值（使用 void)。</p><p>定义类时，可以使类去实现一个接口，实现接口就是使类满足接口的要求。</p></blockquote><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">myInterface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">name</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">age</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">interface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">myInterface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">gender</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">sayHello</span><span style="color:#666666;">():</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">void</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">myClass</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">implements</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myInterface</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">name</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">age</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">gender</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">//构造函数的参数可以使用访问修饰符（public、private、protected）来定义类的属性，并且自动将参数赋值给对应的属性。</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">sayHello</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">666</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">XM</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">myClass</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">xm</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">20</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">male</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">XM</span><span style="color:#666666;">.</span><span style="color:#BD976A;">name</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">XM</span><span style="color:#666666;">.</span><span style="color:#BD976A;">age</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">XM</span><span style="color:#666666;">.</span><span style="color:#80A665;">sayHello</span><span style="color:#666666;">();</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 666</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">myInterface</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">name</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">age</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">myInterface</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">gender</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">sayHello</span><span style="color:#999999;">():</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">void</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">myClass</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">implements</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myInterface</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">name</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">age</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">gender</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">//构造函数的参数可以使用访问修饰符（public、private、protected）来定义类的属性，并且自动将参数赋值给对应的属性。</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">sayHello</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">666</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">XM</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">myClass</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">xm</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">20</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">male</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">XM</span><span style="color:#999999;">.</span><span style="color:#B07D48;">name</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">XM</span><span style="color:#999999;">.</span><span style="color:#B07D48;">age</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">XM</span><span style="color:#999999;">.</span><span style="color:#59873A;">sayHello</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 666</span></span></code></pre></div><br><h3 id="属性的封装" tabindex="-1">属性的封装 <a class="header-anchor" href="#属性的封装" aria-label="Permalink to &quot;属性的封装&quot;">​</a></h3><blockquote><ul><li>public 修饰的属性可以在任意位置访问（修改）默认值</li><li>private 私有属性，私有属性只能在类内部进行访问（修改）通过在类中添加方法使得私有属性可以被外部访问</li><li>protected 受包含的属性，只能在当前类和当前类的子类中使用</li></ul></blockquote><h4 id="常规方法" tabindex="-1"><strong>常规方法</strong> <a class="header-anchor" href="#常规方法" aria-label="Permalink to &quot;**常规方法**&quot;">​</a></h4><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852392.png" alt="image-20230418223049877" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852687.png" alt="image-20230418223315633" style="zoom:67%;"><h4 id="ts-方法" tabindex="-1"><strong>TS 方法</strong> <a class="header-anchor" href="#ts-方法" aria-label="Permalink to &quot;**TS 方法**&quot;">​</a></h4><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852195.png" alt="image-20230418223604462" style="zoom:67%;"><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852498.png" alt="image-20230418223637511" style="zoom:67%;"><br><h3 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h3><p>在定义函数或是类时，如果遇到类型不明确就可以使用泛型。</p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852623.png" alt="image-20230419100904908" style="zoom:80%;"><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852562.png" alt="image-20230419101319740" style="zoom:80%;"><blockquote><p><strong>interface</strong>：是定义接口的关键字。</p><p><strong>implement</strong>：是实现接口的关键字，用于规范传入参数的类型。</p><p><strong>extends</strong>：是子类继承父类的关键字，用于指定子类属性的类型。</p></blockquote><br><br><h2 id="语法巩固" tabindex="-1">语法巩固 <a class="header-anchor" href="#语法巩固" aria-label="Permalink to &quot;语法巩固&quot;">​</a></h2><h3 id="数组类型定义" tabindex="-1">数组类型定义 <a class="header-anchor" href="#数组类型定义" aria-label="Permalink to &quot;数组类型定义&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852844.png" alt="image-20230824144126759"></p><br><h3 id="接口定义" tabindex="-1">接口定义 <a class="header-anchor" href="#接口定义" aria-label="Permalink to &quot;接口定义&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852154.png" alt="image-20230824131923346"></p><br><h3 id="函数定义" tabindex="-1">函数定义 <a class="header-anchor" href="#函数定义" aria-label="Permalink to &quot;函数定义&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151852513.png" alt="image-20230824144420589"></p><br><h3 id="数组对象定义" tabindex="-1">数组对象定义 <a class="header-anchor" href="#数组对象定义" aria-label="Permalink to &quot;数组对象定义&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151853410.png" alt="image-20230824144632718"></p><h3 id="泛型-1" tabindex="-1">泛型 <a class="header-anchor" href="#泛型-1" aria-label="Permalink to &quot;泛型&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151853196.png" alt="image-20230824150131176"></p><br><h4 id="拓展" tabindex="-1">拓展 <a class="header-anchor" href="#拓展" aria-label="Permalink to &quot;拓展&quot;">​</a></h4><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151853777.png" alt="image-20230824150933618"></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151853581.png" alt="image-20230824150945699"></p><p><img src="https://cdn.jsdelivr.net/gh/LAOVA/Typora_images@main/img/202310151853059.png" alt="image-20230824151128055"></p>`,83),e=[o];function t(c,r,y,A,i,D){return a(),n("div",null,e)}const E=s(p,[["render",t]]);export{g as __pageData,E as default};
